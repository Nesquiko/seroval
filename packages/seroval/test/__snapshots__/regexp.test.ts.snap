// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`RegExp > crossSerialize > scoped > supports RegExp 1`] = `"($R=>$R[0]=/[a-z0-9]+/i)($R["example"])"`;

exports[`RegExp > crossSerialize > supports RegExp 1`] = `"$R[0]=/[a-z0-9]+/i"`;

exports[`RegExp > crossSerializeAsync > scoped > supports RegExp 1`] = `"($R=>$R[0]=Promise.resolve($R[1]=/[a-z0-9]+/i))($R["example"])"`;

exports[`RegExp > crossSerializeAsync > supports RegExp 1`] = `"$R[0]=Promise.resolve($R[1]=/[a-z0-9]+/i)"`;

exports[`RegExp > crossSerializeStream > scoped > supports RegExp 1`] = `"($R=>$R[0]=($R[1]=(s,f,p)=>((p=new Promise((a,b)=>{s=a,f=b})).s=s,p.f=f,p))())($R["example"])"`;

exports[`RegExp > crossSerializeStream > scoped > supports RegExp 2`] = `"($R=>($R[3]=(p,d)=>{p.s(d),p.status="success",p.value=d;delete p.s;delete p.f})($R[0],$R[2]=/[a-z0-9]+/i))($R["example"])"`;

exports[`RegExp > crossSerializeStream > supports RegExp 1`] = `"$R[0]=($R[1]=(s,f,p)=>((p=new Promise((a,b)=>{s=a,f=b})).s=s,p.f=f,p))()"`;

exports[`RegExp > crossSerializeStream > supports RegExp 2`] = `"($R[3]=(p,d)=>{p.s(d),p.status="success",p.value=d;delete p.s;delete p.f})($R[0],$R[2]=/[a-z0-9]+/i)"`;

exports[`RegExp > serialize > supports RegExp 1`] = `"/[a-z0-9]+/i"`;

exports[`RegExp > serializeAsync > supports RegExp 1`] = `"Promise.resolve(/[a-z0-9]+/i)"`;

exports[`RegExp > toCrossJSON > supports RegExp 1`] = `"{"t":6,"i":0,"c":"[a-z0-9]+","m":"i"}"`;

exports[`RegExp > toCrossJSONAsync > supports RegExp 1`] = `"{"t":12,"i":0,"s":1,"f":{"t":6,"i":1,"c":"[a-z0-9]+","m":"i"}}"`;

exports[`RegExp > toCrossJSONStream > supports RegExp 1`] = `"{"t":22,"i":0,"f":{"t":26,"i":1,"s":1}}"`;

exports[`RegExp > toCrossJSONStream > supports RegExp 2`] = `"{"t":23,"i":0,"a":[{"t":26,"i":3,"s":2},{"t":6,"i":2,"c":"[a-z0-9]+","m":"i"}]}"`;

exports[`RegExp > toJSON > supports RegExp 1`] = `"{"t":{"t":6,"i":0,"c":"[a-z0-9]+","m":"i"},"f":31,"m":[]}"`;

exports[`RegExp > toJSONAsync > supports RegExp 1`] = `"{"t":{"t":12,"i":0,"s":1,"f":{"t":6,"i":1,"c":"[a-z0-9]+","m":"i"}},"f":31,"m":[]}"`;
