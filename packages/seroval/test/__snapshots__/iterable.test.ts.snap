// Vitest Snapshot v1

exports[`Iterable > compat > should throw an error for unsupported target 1`] = `"Unsupported type \\"Iterable\\""`;

exports[`Iterable > compat > should use Symbol.iterator instead of Array.values. 1`] = `"(function(h){return h={[Symbol.iterator](){return [h][Symbol.iterator]()}}})()"`;

exports[`Iterable > compat > should use functions instead of method shorthand. 1`] = `"(function(h){return h={[Symbol.iterator]:function(){return [h][Symbol.iterator]()}}})()"`;

exports[`Iterable > compat > should use method shorthand instead of arrow functions. 1`] = `"(function(h){return h={[Symbol.iterator](){return [h][Symbol.iterator]()}}})()"`;

exports[`Iterable > compat#toJSON > should throw an error for unsupported target 1`] = `"Unsupported type \\"Iterable\\""`;

exports[`Iterable > compat#toJSON > should use Symbol.iterator instead of Array.values. 1`] = `"[[13,[null,[[2,0]]],0],0,false,1968,{\\"0\\":1}]"`;

exports[`Iterable > compat#toJSON > should use Symbol.iterator instead of Array.values. 2`] = `"(function(h){return h={[Symbol.iterator](){return [h][Symbol.iterator]()}}})()"`;

exports[`Iterable > compat#toJSON > should use functions instead of method shorthand. 1`] = `"[[13,[null,[[2,0]]],0],0,false,1936,{\\"0\\":1}]"`;

exports[`Iterable > compat#toJSON > should use functions instead of method shorthand. 2`] = `"(function(h){return h={[Symbol.iterator]:function(){return [h][Symbol.iterator]()}}})()"`;

exports[`Iterable > compat#toJSON > should use method shorthand instead of arrow functions. 1`] = `"[[13,[null,[[2,0]]],0],0,false,1968,{\\"0\\":1}]"`;

exports[`Iterable > compat#toJSON > should use method shorthand instead of arrow functions. 2`] = `"(function(h){return h={[Symbol.iterator](){return [h][Symbol.iterator]()}}})()"`;

exports[`Iterable > serialize > supports Iterables 1`] = `"Object.assign({[Symbol.iterator]:()=>[1,2,3].values()},{title:\\"Hello World\\"})"`;

exports[`Iterable > serializeAsync > supports Iterables 1`] = `"Promise.resolve(Object.assign({[Symbol.iterator]:()=>[1,2,3].values()},{title:\\"Hello World\\"}))"`;

exports[`Iterable > toJSON > supports Iterables 1`] = `"[[13,[[[\\"title\\"],[[0,\\"\\\\\\"Hello World\\\\\\"\\"]],1],[[0,1],[0,2],[0,3]]],0],0,false,4095,{}]"`;

exports[`Iterable > toJSONAsync > supports Iterables 1`] = `"[[10,[13,[[[\\"title\\"],[[0,\\"\\\\\\"Hello World\\\\\\"\\"]],1],[[0,1],[0,2],[0,3]]],1],0],0,false,4095,{}]"`;
